rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Books
    match /books/{bookId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null;
    }

    // Meetings
    match /meetings/{meetingId} {
      allow read: if request.auth != null;
      // Add write rules for admins if necessary
    }

    // User Goals (legacy structure)
    match /user_goals/{goalId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Goal Checks (legacy structure)
    match /goal_checks/{checkId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // User Goals (new structure)
    match /users/{userId}/goals/{goalId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Goal Progress
    match /users/{userId}/goals/{goalId}/progress/{progressId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Goal Completions
    match /users/{userId}/goals/{goalId}/completions/{completionId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Posts
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }

    // Post Reactions
    match /post_reactions/{reactionId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth != null;
      // Unique reaction check should be handled in application logic or more complex rules
    }

    // Book Progress
    match /bookProgress/{progressId} {
      allow read: if request.auth != null && (
        resource.data.userId == request.auth.uid || 
        resource.data.privacy == "public"
      );
      allow create, update: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }

    // User Stats (readable by all authenticated users, writable by server only)
    match /userStats/{userId} {
      allow read: if request.auth != null;
      allow write: if false; // Only Cloud Functions can write
    }

    // Book Stats (readable by all authenticated users, writable by server only)
    match /bookStats/{bookId} {
      allow read: if request.auth != null;
      allow write: if false; // Only Cloud Functions can write
    }
  }
}
